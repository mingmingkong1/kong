#!/usr/bin/env groovy


def makeBranch(String branchName) {
    sh """
    git checkout -b ${branchName}
    git push origin ${branchName}
    """
}




def createBranch1(repository, sourceBranch, targetBranch) {
    checkoutCode(repository, true, sourceBranch, '83ecbcda-8918-4e88-b90e-664c21ff0829')
    makeBranch(targetBranch)
}

properties([
        parameters([
                choice(choices: 'branch\ntag', description: 'create branch or tag in github?', name: 'branchOrTag'),
              
                string(defaultValue: '', description: 'input the git repo', name: 'gitPath'),
                string(defaultValue: '', description: 'input the source branch or tag name you want to copy from', name: 'sourceBr'),
                string(defaultValue: '', description: 'input the target branch or tag name you want to copy to', name: 'targetBr')
        ])
])


pipeline {
    agent any

    stages {
        stage('clonefirst'){
            steps{
                checkout([$class: 'GitSCM', 
                  branches: [[name: '*/master']], 
                  doGenerateSubmoduleConfigurations: false, 
                  extensions: [], 
                  submoduleCfg: [], 
                  userRemoteConfigs: [[credentialsId: '83ecbcda-8918-4e88-b90e-664c21ff0829', url: params.gitPath]]])
        }
        }
        stage('cloning branch') {
            
            when {
                expression { params.branchOrTag == 'branch' }
            }
            steps {
                script {
      
                    if (params.gitPath) {
                        createBranch1(params.gitPath, params.sourceBr,params.targetBr)
                    }

                }
            }
        }
     }
}
